{
    "scopeName": "source.mml",
    "patterns": [
        {"include": "#instruments"},
        {"include": "#comment"},
        {"include": "#control"},
        {"include": "#channels"},
        {"include": "#notes"},
        {"include": "#errors"},
        {"include": "#operators"}
    ],
    "repository": {
        "comment": {
            "patterns": [
                {"include": "#semicoloncomment"},
                {"include": "#startoflinecomment"},
                {"include": "#blockcomment"}
            ],
            "repository": {
                "semicoloncomment": {
                    "match": ";.+$",
                    "name": "comment.line.semicolon"
                },
                "startoflinecomment": {
                    "match": "^( |  ).+$",
                    "name": "comment.line.startofline"
                },
                "blockcomment": {
                    "begin": "`",
                    "end": "`",
                    "name": "comment.block.blockcomment"
                }
            }
        },
        "control": {
                "begin": "#[^   ]+",
                "end": "[ |\t].+$",
                "name": "keyword.control.import",
                "beginCaptures": {"0":{"name": "keyword.control.importname"}},
                "endCaptures": {"0":{"name": "string.quoted.importsetting"}}
        },
        "instruments": {
            "patterns": [
                {"include":"#instrumentblock"},
                {"include":"#instrumentinline"}
            ],
            "repository": {
                "instrumentinline": {
                    "match":"@[0-9]+[-,0-9]*",
                    "name": "constant.character.instrumentinline"
                },
                "instrumentblock": {
                    "begin": "^@[0-9]+",
                    "while": "^( |[0-9]|    |[;])",
                    "name": "constant.numeric.instrumentblock",
                    "beginCaptures": {
                        "0": {"name": "constant.character.instrumentnumber"}
                    },
                    "patterns": [
                        {
                            "match": "^;.+$",
                            "name": "comment.line.instrumentembedded",
                            "note": "doesn't work for some reason"
                        },
                        {
                            "match": "=.+$",
                            "name": "constant.character.instrumentname"
                        },
                        {"include": "#semicoloncomment"}
                    ]
                }
            }
        },
        "channels": {

            "patterns": [
                {"include": "#channelnotation"},
                {"include": "#rsschannels"},
                {"include": "#macros"}
            ],
            "repository": {
                "channelnotation": {
                    "match": "^[a-zA-Z0-9]+[ |\t]",
                    "name": "entity.name.type.channelnotation"
                },
                "rsschannels": {
                    "match": "[R][0-9]+",
                    "name": "entity.name.type.rsschannelnotation"
                },
                "macros":{
                    "match": "![A-Za-z0-9]+",
                    "name": "constant.character.escape.macro"
                }
            }
        },
        "notes": {
            "match": "[cdefgabr][+-=]*[$%]{0,1}[0-9]*[.]*",
            "name": "support.variable.note"
        },
        "errors": {
            "match": "[ ]+,",
            "name": "invalid.illegal.spacecomma"
        },
        "operators": {
            "patterns": [
                {"include":"#portamento"},
                {"include":"#octave"},
                {"include":"#octavechange"}
            ],
            "repository": {
                "portamento": {
                    "match": "{|}[0-9]*[.]*[,0-9]*",
                    "name": "support.function.portamento"
                },
                "octave": {
                    "match": "o[+|-]{0,1}[0-9]",
                    "name": "support.function.octave"
                },
                "octavechange": {
                    "match": "[<|>|X]+",
                    "name": "support.function.octavechange"
                }
            }
        }
    }
}